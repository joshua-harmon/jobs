import * as Yup from 'yup';

const ErrorSchema = () => {
  const rmsg = ' * Required';

  return Yup.object().shape({
    firstName: Yup.string().required(rmsg),
    lastName: Yup.string().required(rmsg),
    middleInitial: Yup.string(),
    email: Yup.string().email(),
    phone: Yup.string().required(rmsg),
    streetAddress: Yup.string().required(rmsg),
    city: Yup.string().required(rmsg),
    state: Yup.string().length(2).required(rmsg),
    zip: Yup.string().required(rmsg),
    entitledToWork: Yup.boolean().required(rmsg),
    youngerThan18: Yup.boolean().required(rmsg),
    convictedFelon: Yup.boolean().required(rmsg),
    felonyExplanation: Yup.string(),
    probation: Yup.boolean().required(rmsg),
    probationEnd: Yup.date(),
    militaryService: Yup.boolean().required(rmsg),
    branch: Yup.string(),
    physicalLimitations: Yup.boolean().required(rmsg),
    position: Yup.string().required(rmsg),
    referral: Yup.string().required(rmsg),
    expectedRate: Yup.string().required(rmsg),
    dateAvailable: Yup.date().required(rmsg),
    everApplied: Yup.boolean().required(rmsg),
    naturalEssentialsPreviously: Yup.boolean().required(rmsg),
    employerWork1: Yup.string().required(rmsg),
    streetWork1: Yup.string(),
    cityWork1: Yup.string(),
    stateWork1: Yup.string(),
    zipWork1: Yup.string(),
    phoneWork1: Yup.string(),
    supervisorWork1: Yup.string(),
    positionWork1: Yup.string(),
    startWork1: Yup.date(),
    endWork1: Yup.date(),
    payWork1: Yup.string(),
    reasonWork1: Yup.string(),
    contactWork1: Yup.boolean(),
    employerWork2: Yup.string(),
    streetWork2: Yup.string(),
    cityWork2: Yup.string(),
    stateWork2: Yup.string(),
    zipWork2: Yup.string(),
    phoneWork2: Yup.string(),
    supervisorWork2: Yup.string(),
    positionWork2: Yup.string(),
    startWork2: Yup.date(),
    endWork2: Yup.date(),
    payWork2: Yup.string(),
    reasonWork2: Yup.string(),
    contactWork2: Yup.boolean(),
    employerWork3: Yup.string(),
    streetWork3: Yup.string(),
    cityWork3: Yup.string(),
    stateWork3: Yup.string(),
    zipWork3: Yup.string(),
    phoneWork3: Yup.string(),
    supervisorWork3: Yup.string(),
    positionWork3: Yup.string(),
    startWork3: Yup.date(),
    endWork3: Yup.date(),
    payWork3: Yup.string(),
    reasonWork3: Yup.string(),
    contactWork3: Yup.boolean(),
    highSchool: Yup.string(),
    highSchoolYrCompleted: Yup.string(),
    highSchoolDegree: Yup.string(),
    highSchoolMajor: Yup.string(),
    college: Yup.string(),
    collegeYrCompleted: Yup.string(),
    collegeDegree: Yup.string(),
    collegeMajor: Yup.string(),
    tradeSchool: Yup.string(),
    tradeSchoolYrCompleted: Yup.string(),
    tradeSchoolDegree: Yup.string(),
    tradeSchoolMajor: Yup.string(),
    other: Yup.string(),
    otherYrCompleted: Yup.string(),
    otherDegree: Yup.string(),
    otherMajor: Yup.string(),
    specialSkills: Yup.string(),
    reference1: Yup.string().required(rmsg),
    reference1Phone: Yup.string().required(rmsg),
    reference2: Yup.string().required(rmsg),
    reference2Phone: Yup.string().required(rmsg),
    reference3: Yup.string().required(rmsg),
    reference3Phone: Yup.string().required(rmsg),
  });
};

export default ErrorSchema;
